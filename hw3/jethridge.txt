Joshua Ethridge, jethridge, 108639966, Score: 53/100
Homework 3 - Dynamic Memory Allocator

Compilation Tests (5/5)
Score   Test Name                                                       Test Executed? Notes                                    Output
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
0/0     Check for illegal functions                                     ✔              EXIT_SUCCESS                             Checking files src/sfmm.c for illegal functions
### No illegal functions found
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5/5     Compilation with -Wall -Werror                                  ✔                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Basic Tests (25/30)
Score   Test Name                                                       Test Executed? Notes                                    Output
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2/2     Malloc an Integer                                               ✔                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2/2     Malloc an assign an Integer value                               ✔                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2/2     Malloc a second value & assign                                  ✔                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2/2     Check integer value is still correct                            ✔                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2/2     Free block and check header/footer values                       ✔                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2/2     Allocate a large block                                          ✔                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1/1     Block Size Check: char                                          ✔                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1/1     Block Size Check: short                                         ✔                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1/1     Block Size Check: int                                           ✔                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1/1     Block Size Check: double                                        ✔                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1/1     Block Size Check: long double                                   ✔                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1/1     Block Size Check: struct of 7737 bytes                          ✔                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
0/3     Malloc for more memory than initialized                         ✘              SIGSEGV                                  Segmentation fault (core dumped)
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
0/2     Malloc for more memory than 4GB                                 ✘              SIGSEGV                                  Segmentation fault (core dumped)
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4/4     external fragmentation. sf_sbrk for more space                  ✔                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3/3     Check next and prev pointers of free block at head of list      ✔                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Managing Memory (0/5)
Score   Test Name                                                       Test Executed? Notes                                    Output
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
0/5     Managing Memory?  No sbrk in small sizes or per request         ✔                                                       ERROR: sbrk moved to obtain more space when not needed. before: 0x7f7c28391010, after: 0x7f7c28392010
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Calloc and Realloc (8/15)
Score   Test Name                                                       Test Executed? Notes                                    Output
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3/3     callocTest                                                      ✔                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
0/2     realloc to size 0, expect NULL                                  ✘              SIGSEGV                                  Segmentation fault (core dumped)
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5/5     realloc to smaller size                                         ✔                                                       50
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
0/5     realloc to larger size                                          ✘              SIGSEGV                                  Segmentation fault (core dumped)
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

List Management and Block Placement (0/20)
Score   Test Name                                                       Test Executed? Notes                                    Output
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
0/5     LIFO & FIRST                                                    ✔                                                       ERROR: First allocation. sf_malloc(970) placed in wrong position.
ERROR: Second allocation. sf_malloc(64) placed in wrong position.
Expected free list sizes: LIFO: (80) -> (528) -> (1040) -> (32) -> (32) -> FREE (~48 bytes) -> NULL
Your initial free list:
[1;34mSnapshot[0m: Explicit 8 4096
[0;33m# 2016-03-23 11:07
[0m0x7fa568bb0008 32
0x7fa568bb01d8 32
0x7fa568bb1018 -16
0x7fa568bb0288 1040
0x7fa568bb06b8 528
0x7fa568bb0138 80
First allocation of sf_malloc(970)
After first allocation of sf_malloc(970)
[1;34mSnapshot[0m: Explicit 8 4096
[0;33m# 2016-03-23 11:07
[0m0x7fa568bb03e8 -960
0x7fa568bb01d8 32
0x7fa568bb1018 -16
0x7fa568bb0288 1040
0x7fa568bb06b8 528
0x7fa568bb0138 80
Second allocation of sf_malloc(64)
After second allocation of sf_malloc(64)
[1;34mSnapshot[0m: Explicit 8 4096
[0;33m# 2016-03-23 11:07
[0m0x7fa568bb0438 -1040
0x7fa568bb01d8 32
0x7fa568bb1018 -16
0x7fa568bb0288 1040
0x7fa568bb06b8 528
0x7fa568bb0138 80
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
0/5     LIFO & NEXT                                                     ✔                                                       ERROR: First allocation. sf_malloc(970) placed in wrong position.
ERROR: Second allocation. sf_malloc(64) placed in wrong position.
Expected free list sizes: LIFO: (80) -> (528) -> (1040) -> (32) -> (32) -> FREE (~48 bytes) -> NULL
Your initial free list:
[1;34mSnapshot[0m: Explicit 8 4096
[0;33m# 2016-03-23 11:07
[0m0x7f91a681c008 32
0x7f91a681c1d8 32
0x7f91a681d018 -16
0x7f91a681c288 1040
0x7f91a681c6b8 528
0x7f91a681c138 80
First allocation of sf_malloc(970)
After first allocation of sf_malloc(970)
[1;34mSnapshot[0m: Explicit 8 4096
[0;33m# 2016-03-23 11:07
[0m0x7f91a681c3e8 -960
0x7f91a681c1d8 32
0x7f91a681d018 -16
0x7f91a681c288 1040
0x7f91a681c6b8 528
0x7f91a681c138 80
Second allocation of sf_malloc(64)
After second allocation of sf_malloc(64)
[1;34mSnapshot[0m: Explicit 8 4096
[0;33m# 2016-03-23 11:07
[0m0x7f91a681c438 -1040
0x7f91a681c1d8 32
0x7f91a681d018 -16
0x7f91a681c288 1040
0x7f91a681c6b8 528
0x7f91a681c138 80
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
0/5     ADDR & FIRST                                                    ✔                                                       ERROR: First allocation. sf_malloc(970) placed in wrong position.
ERROR: Second allocation. sf_malloc(64) placed in wrong position.
Expected free list sizes: ADDR: (32) -> (80) -> (32) -> (1040) -> (528) -> FREE (~48 bytes)-> NULL
Your initial free list:
[1;34mSnapshot[0m: Explicit 8 4096
[0;33m# 2016-03-23 11:07
[0m0x7f69694f3008 32
0x7f69694f31d8 32
0x7f69694f4018 -16
0x7f69694f3288 1040
0x7f69694f36b8 528
0x7f69694f3138 80
First allocation of sf_malloc(970)
After first allocation of sf_malloc(970)
[1;34mSnapshot[0m: Explicit 8 4096
[0;33m# 2016-03-23 11:07
[0m0x7f69694f33e8 -960
0x7f69694f31d8 32
0x7f69694f4018 -16
0x7f69694f3288 1040
0x7f69694f36b8 528
0x7f69694f3138 80
Second allocation of sf_malloc(64)
After second allocation of sf_malloc(64)
[1;34mSnapshot[0m: Explicit 8 4096
[0;33m# 2016-03-23 11:07
[0m0x7f69694f3438 -1040
0x7f69694f31d8 32
0x7f69694f4018 -16
0x7f69694f3288 1040
0x7f69694f36b8 528
0x7f69694f3138 80
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
0/5     ADDR & NEXT                                                     ✔                                                       ERROR: First allocation. sf_malloc(970) placed in wrong position.
ERROR: Second allocation. sf_malloc(64) placed in wrong position.
Expected free list sizes: ADDR: (32) -> (80) -> (32) -> (1040) -> (528) -> FREE (~48 bytes)-> NULL
Your initial free list:
[1;34mSnapshot[0m: Explicit 8 4096
[0;33m# 2016-03-23 11:07
[0m0x7faa4c770008 32
0x7faa4c7701d8 32
0x7faa4c771018 -16
0x7faa4c770288 1040
0x7faa4c7706b8 528
0x7faa4c770138 80
First allocation of sf_malloc(970)
After first allocation of sf_malloc(970)
[1;34mSnapshot[0m: Explicit 8 4096
[0;33m# 2016-03-23 11:07
[0m0x7faa4c7703e8 -960
0x7faa4c7701d8 32
0x7faa4c771018 -16
0x7faa4c770288 1040
0x7faa4c7706b8 528
0x7faa4c770138 80
Second allocation of sf_malloc(64)
After second allocation of sf_malloc(64)
[1;34mSnapshot[0m: Explicit 8 4096
[0;33m# 2016-03-23 11:07
[0m0x7faa4c770438 -1040
0x7faa4c7701d8 32
0x7faa4c771018 -16
0x7faa4c770288 1040
0x7faa4c7706b8 528
0x7faa4c770138 80
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Coalescing (15/15)
Score   Test Name                                                       Test Executed? Notes                                    Output
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3/3     Coalesce Case 1: no coalescing                                  ✔                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3/3     Coalesce Case 2: Free block before                              ✔                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3/3     Coalesce case 3: Free after                                     ✔                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3/3     Coalesce case 4: free before and after                          ✔                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3/3     Coalesce edge case 1: Do not coalesce before start of heap      ✔                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Stress Test (0/10)
Score   Test Name                                                       Test Executed? Notes                                    Output
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
0/10    Stress test                                                     ✘              SIGSEGV                                  Segmentation fault (core dumped)
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

